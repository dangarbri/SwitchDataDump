#include "error_string.h"
#include <iostream>
#include <map>
#include <string>

using namespace std;

// Error list adapted from https://switchbrew.org/wiki/Error_codes
// Since there's a ton of strings that bloat the image size, this should
// only be used for debug.
#ifdef ENABLE_ERROR_CODE_PRINTS
static map<int, string> s_error_code_strings = {
    {0x0E01, "Session count exceeded"},
    {0x1C01, "Invalid kernel capability descriptor"},
    {0x4201, "Not Implemented"},
    {0x7601, "Thread terminated / termination requested"},
    {0x8C01, "No more debug events"},
    {0xCA01, "Invalid size"},
    {0xCC01, "Invalid address"},
    {0xCE01, "Resource exhaustion"},
    {0xD001, "Memory exhaustion"},
    {0xD201, "Handle - table exhaustion"},
    {0xD401, "Invalid memory state / invalid memory permissions."},
    {0xD801, "Invalid memory permissions."},
    {0xDC01, "Invalid memory range"},
    {0xE001, "Invalid thread priority."},
    {0xE201, "Invalid processor id."},
    {0xE401, "Invalid handle."},
    {0xE601, "Invalid pointer / Syscall copy from user failed."},
    {0xE801, "Invalid combination"},
    {0xEA01, "Time out.Also when you give 0 handles to svcWaitSynchronizationN."},
    {0xEC01, "Operation canceled"},
    {0xEE01, "Out of range"},
    {0xF001, "Invalid enum"},
    {0xF201, "No such entry"},
    {0xF401, "Irq / DeviceAddressSpace / },{...}, already registered"},
    {0xF601, "Port remote dead"},
    {0xF801, "[Usermode] Unhandled interrupt / exception"},
    {0xFA01, "Invalid state"},
    {0xFC01, "Reserved value"},
    {0xFE01, "Invalid hardware breakpoint"},
    {0x10001, "[Usermode] Fatal exception"},
    {0x10201, "Last thread didn't belong to your process"},
    {0x10601, "Port closed"},
    {0x10801, "Resource limit exceeded"},
    {0x20801, "Command buffer too small"},
    {0x40A01, "Invalid process ID."},
    {0x40C01, "Invalid thread ID."},
    {0x40E01, "Invalid thread ID(used in svcGetDebugThreadParam)."},
    {0x41001, "Process not being debugged"},
    {0x202, "Path does not exist."},
    {0x402, "Path already exists."},
    {0xE02, "Resource already in use(file already opened, savedata filesystem already mounted)."},
    {0x4602, "Not enough free space for BIS Calibration partition."},
    {0x4802, "Not enough free space for BIS Safe partition."},
    {0x4A02, "Not enough free space for BIS User partition."},
    {0x4C02, "Not enough free space for BIS System partition."},
    {0x4E02, "Not enough free space on SD card."},
    {0x6402, "NCA is older than version 3, or NCA SDK version is older than 0.11.0.0"},
    {0x7802, "Specified mount name already exists."},
    {0x7D202, "Process does not have RomFs"},
    {0x7D402, "Title - id not found / savedata not found."},
    {0xFA202, "SD card not inserted"},
    {0x13B002, "Gamecard not inserted"},
    {0x13B402, "Attempted process an AsicHandler command in initial mode"},
    {0x13D802, "Attempted to read from the secure gamecard partition in normal mode"},
    {0x13DA02, "Attempted to read from the normal gamecard partition in secure mode"},
    {0x13DC02, "Attempted a read that spanned both the normal and secure gamecard partitions"},
    {0x13E002, "Gamecard initial data hash doesn't match the initial data hash in the card header"},
    {0x13E202, "Gamecard initial data reserved area is not all zeros"},
    {0x13E402, "Gamecard certificate kek index doesn't match card header kek index"},
    {0x13EE02, "Unable to read card header on gamecard init"},
    {0x140A02, "Encountered SDMMC error in write operation"},
    {0x145002, "Attempted to switch lotus state machine to secure mode from a mode other than normal"},
    {0x145202, "Attempted to switch lotus state machine to normal mode from a mode other than initial"},
    {0x145402, "Attempted to switch lotus state machine to write mode from a mode other than normal"},
    {0x149402, "Error processing lotus command SetUserAsicFirmware"},
    {0x149A02, "Error processing lotus command GetAsicCert"},
    {0x14A002, "Error processing lotus command SetEmmcEmbeddedSocCertificate"},
    {0x14AA02, "Error processing lotus command GetAsicEncryptedMessage"},
    {0x14AC02, "Error processing lotus command SetLibraryEncryptedMessage"},
    {0x14B602, "Error processing lotus command GetAsicAuthenticationData"},
    {0x14B802, "Error processing lotus command SetAsicAuthenticationDataHash"},
    {0x14BA02, "Error processing lotus command SetLibraryAuthenticationData"},
    {0x14BC02, "Error processing lotus command GetLibraryAuthenticationDataHash"},
    {0x14C202, "Error processing lotus command ExchangeRandomValuesInSecureMode"},
    {0x14D802, "Error calling nn::gc::detail::GcCrypto::GenerateRandomBytes"},
    {0x14DE02, "Error processing lotus command ReadAsicRegister"},
    {0x14E002, "Error processing lotus command GetGameCardIdSet"},
    {0x14E402, "Error processing lotus command GetCardHeader"},
    {0x14E802, "Error processing lotus command GetCardKeyArea"},
    {0x14EA02, "Error processing lotus command ChangeDebugMode"},
    {0x14EC02, "Error processing lotus command GetRmaInformation"},
    {0x150802, "Tried sending lotus card command Refresh when not in secure mode"},
    {0x150A02, "Tried sending lotus card command when not in correct mode"},
    {0x155602, "Error processing lotus card command ReadId1"},
    {0x155802, "Error processing lotus card command ReadId2"},
    {0x155A02, "Error processing lotus card command ReadId3"},
    {0x155E02, "Error processing lotus card command ReadPage"},
    {0x156202, "Error processing lotus card command WritePage"},
    {0x156402, "Error processing lotus card command Refresh"},
    {0x156C02, "Error processing lotus card command ReadCrc"},
    {0x156E02, "Error processing lotus card command Erase or UnlockForceErase"},
    {0x157002, "Error processing lotus card command ReadDevParam"},
    {0x157202, "Error processing lotus card command WriteDevParam"},
    {0x16B002, "Id2Normal did not match the value in the buffer returned by ChangeDebugMode"},
    {0x16B202, "Id1Normal did not match Id1Writer when switching gamecard to write mode"},
    {0x16B402, "Id2Normal did not match Id2Writer when switching gamecard to write mode"},
    {0x171402, "Invalid gamecard handle."},
    {0x172002, "Invalid gamecard handle when opening normal gamecard partition"},
    {0x172202, "Invalid gamecard handle when opening secure gamecard partition"},
    {0x177202, "Unimplemented behavior"},
    {0x177602, "File / Directory already exists."},
    {0x190202, "Memory allocation failure related to FAT filesystem code"},
    {0x190602, "Memory allocation failure related to FAT filesystem code"},
    {0x190802, "Memory allocation failure related to FAT filesystem code"},
    {0x190A02, "Memory allocation failure related to FAT filesystem code"},
    {0x190C02, "Memory allocation failure related to FAT filesystem code"},
    {0x191002, "Memory allocation failure related to FAT filesystem code"},
    {0x195802, "Allocation failure related to SD cards"},
    {0x196002, "Out of memory"},
    {0x196202, "Out of memory"},
    {0x1A3E02, "Out of memory"},
    {0x1A4002, "Out of memory"},
    {0x1A4A02, "Out of memory"},
    {0x21BC02, "Invalid save data filesystem magic(valid magic is SAVE in ASCII)"},
    {0x234202, "Error reading ACID section in NPDM"},
    {0x234402, "Invalid NPDM ACID section size"},
    {0x234602, "Last byte of the ACID modulus is zero"},
    {0x234802, "Invalid ACID fixed key signature"},
    {0x234A02, "Invalid NCA magic"},
    {0x234C02, "Invalid NCA header fixed key signature"},
    {0x234E02, "Invalid NCA header ACID signature"},
    {0x235002, "Invalid NCA header section hash"},
    {0x235202, "Invalid NCA Key index"},
    {0x235602, "Invalid encryption type"},
    {0x235802, "Redirection BKTR table size is negative"},
    {0x235A02, "Encryption BKTR table size is negative"},
    {0x235C02, "Redirection BKTR table end offset is past the Encryption BKTR table start offset"},
    {0x235E02, "NCA - path used with the wrong titleID."},
    {0x236002, "NCA header value is out of range"},
    {0x236202, "NCA FS header value is out of range"},
    {0x236802, "PartitionFS hash block size is not a power of 2"},
    {0x236A02, "PartitionFS hash \"always_2\" field is not 2"},
    {0x236C02, "PartitionFS hash table is too small for main data"},
    {0x236E02, "Invalid PartitionFS block hash"},
    {0x244402, "Invalid Partition file hashed region bounds"},
    {0x244602, "Invalid Partition FS hash"},
    {0x244802, "Invalid PFS0 magic"},
    {0x244A02, "Invalid HFS0 magic"},
    {0x244C02, "Invalid name offset for Partition FS file entry"},
    {0x244E02, "Calculated Partition FS header size changed between 2 consecutive reads"},
    {0x249802, "Invalid FAT file number."},
    {0x249C02, "Invalid FAT format for BIS User partition."},
    {0x249E02, "Invalid FAT format for BIS System partition."},
    {0x24A002, "Invalid FAT format for BIS Safe partition."},
    {0x24A202, "Invalid FAT format for BIS Calibration partition."},
    {0x250E02, "Corrupted NAX0 header."},
    {0x251002, "Invalid NAX0 magicnum."},
    {0x280202, "Invalid FAT size"},
    {0x280402, "Invalid FAT BPB(BIOS Parameter Block)"},
    {0x280602, "Invalid FAT parameter"},
    {0x280802, "Invalid FAT sector"},
    {0x280A02, "Invalid FAT sector"},
    {0x280C02, "Invalid FAT sector"},
    {0x280E02, "Invalid FAT sector"},
    {0x296A02, "Mountpoint not found"},
    {0x2EE202, "Invalid input"},
    {0x2EE602, "Path too long"},
    {0x2EE802, "Invalid character."},
    {0x2EEA02, "Invalid directory path."},
    {0x2EEC02, "Unable to retrieve directory from path"},
    {0x2F5A02, "Offset outside storage"},
    {0x313802, "Operation not supported"},
    {0x313A02, "A specified filesystem has no MultiCommitTarget when doing a multi - filesystem commit"},
    {0x313C02, "Attempted to resize a nn::fs::SubStorage or BufferedStorage that is marked as non - resizable"},
    {0x313E02, "Attempted to resize a nn::fs::SubStorage or BufferedStorage when the SubStorage ends before the base storage"},
    {0x314002, "Attempted to call nn::fs::MemoryStorage::SetSize"},
    {0x314202, "Invalid Operation ID in nn::fs::MemoryStorage::OperateRange"},
    {0x314402, "Invalid Operation ID in nn::fs::FileStorage::OperateRange"},
    {0x314602, "Invalid Operation ID in nn::fs::FileHandleStorage::OperateRange"},
    {0x314802, "Invalid Operation ID in nn::fssystem::SwitchStorage::OperateRange"},
    {0x314A02, "Invalid Operation ID in nn::fs::detail::StorageServiceObjectAdapter::OperateRange"},
    {0x314C02, "Attempted to call nn::fssystem::AesCtrCounterExtendedStorage::Write"},
    {0x314E02, "Attempted to call nn::fssystem::AesCtrCounterExtendedStorage::SetSize"},
    {0x315002, "Invalid Operation ID in nn::fssystem::AesCtrCounterExtendedStorage::OperateRange"},
    {0x315202, "Attempted to call nn::fssystem::AesCtrStorageExternal::Write"},
    {0x315402, "Attempted to call nn::fssystem::AesCtrStorageExternal::SetSize"},
    {0x315602, "Attempted to call nn::fssystem::AesCtrStorage::SetSize"},
    {0x315802, "Attempted to call nn::fssystem::save::HierarchicalIntegrityVerificationStorage::SetSize"},
    {0x315A02, "Attempted to call nn::fssystem::save::HierarchicalIntegrityVerificationStorage::OperateRange"},
    {0x315C02, "Attempted to call nn::fssystem::save::IntegrityVerificationStorage::SetSize"},
    {0x315E02, "Attempted to invalidate the cache of a RomFs IVFC storage in nn::fssystem::save::IntegrityVerificationStorage::OperateRange"},
    {0x316002, "Invalid Operation ID in nn::fssystem::save::IntegrityVerificationStorage::OperateRange"},
    {0x316202, "Attempted to call nn::fssystem::save::BlockCacheBufferedStorage::SetSize"},
    {0x316402, "Attempted to invalidate the cache of something other than a savedata IVFC storage in nn::fssystem::save::BlockCacheBufferedStorage::OperateRange"},
    {0x316602, "Invalid Operation ID in nn::fssystem::save::BlockCacheBufferedStorage::OperateRange"},
    {0x316802, "Attempted to call nn::fssystem::IndirectStorage::Write"},
    {0x316A02, "Attempted to call nn::fssystem::IndirectStorage::SetSize"},
    {0x316C02, "Invalid Operation ID in nn::fssystem::IndirectStorage::OperateRange"},
    {0x316E02, "Attempted to call nn::fssystem::SparseStorage::ZeroStorage::Write"},
    {0x317002, "Attempted to call nn::fssystem::SparseStorage::ZeroStorage::SetSize"},
    {0x317202, "Attempted to call nn::fssystem::HierarchicalSha256Storage::SetSize"},
    {0x317402, "Attempted to call nn::fssystem::ReadOnlyBlockCacheStorage::Write"},
    {0x317602, "Attempted to call nn::fssystem::ReadOnlyBlockCacheStorage::SetSize"},
    {0x317802, "Attempted to call nn::fssystem::IntegrityRomFsStorage::SetSize"},
    {0x317A02, "Attempted to call nn::fssystem::save::DuplexStorage::SetSize"},
    {0x317C02, "Invalid Operation ID in nn::fssystem::save::DuplexStorage::OperateRange"},
    {0x317E02, "Attempted to call nn::fssystem::save::HierarchicalDuplexStorage::SetSize"},
    {0x318002, "Attempted to call nn::fssystem::save::RemapStorage::GetSize"},
    {0x318202, "Attempted to call nn::fssystem::save::RemapStorage::SetSize"},
    {0x318402, "Invalid Operation ID in nn::fssystem::save::RemapStorage::OperateRange"},
    {0x318602, "Attempted to call nn::fssystem::save::IntegritySaveDataStorage::SetSize"},
    {0x318802, "Invalid Operation ID in nn::fssystem::save::IntegritySaveDataStorage::OperateRange"},
    {0x318A02, "Attempted to call nn::fssystem::save::JournalIntegritySaveDataStorage::SetSize"},
    {0x318C02, "Invalid Operation ID in nn::fssystem::save::JournalIntegritySaveDataStorage::OperateRange"},
    {0x318E02, "Attempted to call nn::fssystem::save::JournalStorage::GetSize"},
    {0x319002, "Attempted to call nn::fssystem::save::JournalStorage::SetSize"},
    {0x319202, "Invalid Operation ID in nn::fssystem::save::JournalStorage::OperateRange"},
    {0x319402, "Attempted to call nn::fssystem::save::UnionStorage::SetSize"},
    {0x319602, "Attempted to call nn::fssystem::dbm::AllocationTableStorage::SetSize"},
    {0x319802, "Attempted to call nn::fssrv::fscreator::WriteOnlyGameCardStorage::Read"},
    {0x319A02, "Attempted to call nn::fssrv::fscreator::WriteOnlyGameCardStorage::SetSize"},
    {0x319C02, "Attempted to call nn::fssrv::fscreator::ReadOnlyGameCardStorage::Write"},
    {0x319E02, "Attempted to call nn::fssrv::fscreator::ReadOnlyGameCardStorage::SetSize"},
    {0x31A002, "Invalid Operation ID in nn::fssrv::fscreator::ReadOnlyGameCardStorage::OperateRange"},
    {0x31A202, "Attempted to call SdStorage::SetSize"},
    {0x31A402, "Invalid Operation ID in SdStorage::OperateRange"},
    {0x31A602, "Invalid Operation ID in nn::fat::FatFile::DoOperateRange"},
    {0x31A802, "Invalid Operation ID in nn::fssystem::StorageFile::DoOperateRange"},
    {0x31AA02, "Attempted to call nn::fssystem::ConcatenationFile::SetSize"},
    {0x31AC02, "Attempted to call nn::fssystem::ConcatenationFile::OperateRange"},
    {0x31AE02, "Invalid Query ID in nn::fssystem::ConcatenationFileSystem::DoQueryEntry"},
    {0x31B002, "Invalid Operation ID in nn::fssystem::ConcatenationFile::DoOperateRange"},
    {0x31B202, "Attempted to call nn::fssystem::ZeroBitmapFile::SetSize"},
    {0x31B402, "Invalid Operation ID in nn::fs::detail::FileServiceObjectAdapter::DoOperateRange"},
    {0x31B602, "Invalid Operation ID in nn::fssystem::AesXtsFile::DoOperateRange"},
    {0x31B802, "Attempted to modify a nn::fs::RomFsFileSystem"},
    {0x31BA02, "Attempted to call nn::fs::RomFsFileSystem::DoCommitProvisionally"},
    {0x31BC02, "Attempted to query the space in a nn::fs::RomFsFileSystem"},
    {0x31BE02, "Attempted to modify a nn::fssystem::RomFsFile"},
    {0x31C002, "Invalid Operation ID in nn::fssystem::RomFsFile::DoOperateRange"},
    {0x31C202, "Attempted to modify a nn::fs::ReadOnlyFileSystemTemplate"},
    {0x31C402, "Attempted to call nn::fs::ReadOnlyFileSystemTemplate::DoCommitProvisionally"},
    {0x31C602, "Attempted to query the space in a nn::fs::ReadOnlyFileSystemTemplate"},
    {0x31C802, "Attempted to modify a nn::fs::ReadOnlyFileSystemFile"},
    {0x31CA02, "Invalid Operation ID in nn::fs::ReadOnlyFileSystemFile::DoOperateRange"},
    {0x31CC02, "Attempted to modify a nn::fssystem::PartitionFileSystemCore"},
    {0x31CE02, "Attempted to call nn::fssystem::PartitionFileSystemCore::DoCommitProvisionally"},
    {0x31D002, "Attempted to call nn::fssystem::PartitionFileSystemCore::PartitionFile::DoSetSize"},
    {0x31D202, "Invalid Operation ID in nn::fssystem::PartitionFileSystemCore::PartitionFile::DoOperateRange"},
    {0x31D402, "Invalid Operation ID in nn::fssystem::TmFileSystemFile::DoOperateRange"},
    {0x31D602, "Attempted to call unsupported functions in nn::fssrv::fscreator::SaveDataInternalStorageFileSystem nn::fssrv::detail::SaveDataInternalStorageAccessor::PaddingFile or nn::fssystem::save::detail::SaveDataExtraDataInternalStorageFile" },
    {0x31DC02, "Attempted to call nn::fssystem::ApplicationTemporaryFileSystem::DoCommitProvisionally"},
    {0x31DE02, "Attempted to call nn::fssystem::SaveDataFileSystem::DoCommitProvisionally"},
    {0x31E002, "Attempted to call nn::fssystem::DirectorySaveDataFileSystem::DoCommitProvisionally"},
    {0x31E202, "Attempted to call nn::fssystem::ZeroBitmapHashStorageFile::Write"},
    {0x31E402, "Attempted to call nn::fssystem::ZeroBitmapHashStorageFile::SetSize"},
    {0x320002, "Permission denied"},
    {0x326602, "Missing titlekey(? ) required to mount content"},
    {0x326E02, "File not closed"},
    {0x327002, "Directory not closed"},
    {0x327202, "Writable file not closed when committing"},
    {0x327402, "FS allocators already registered"},
    {0x327602, "FS allocators already used"},
    {0x327A02, "FS allocator alignment violation"},
    {0x339402, "File not found."},
    {0x339602, "Directory not found."},
    {0x346C02, "Multi - commit limit reached"},
    {0x35F202, "Mount name not found in table."},
    {0x3DBC02, "RomFs table : Entry not found in dictionary"},
    {0x3DBE02, "RomFs table : File not found"},
    {0x3DC002, "RomFs table : Directory not found"},
    {0x3DC402, "RomFs table : Entry already exists when trying to add a new entry"},
    {0x3DC602, "RomFs table : Insufficient space to add new entry"},
    {0x3DC802, "RomFs table : Unable to add new directory"},
    {0x3DCA02, "RomFs table : Unable to add new file"},
    {0x3DCC02, "RomFs directory has no more child directories / files when iterating"},
    {0x3DD402, "RomFs table : Path is file, not directory"},
    {0x803, "OS busy"},
    {0xE03, "Invalid parameter"},
    {0x1003, "Out of memory"},
    {0x1203, "Out of resources"},
    {0x3EA03, "Invalid handle"},
    {0x3EE03, "Invalid memory mirror"},
    {0x7FE03, "TLS slot is not allocated"},
    {0xA05, "NcaID not found.Returned when attempting to mount titles which exist that aren't *8XX titles, the same way *8XX titles are mounted."},
    {0xE05, "TitleId not found"},
    {0x1805, "Invalid StorageId"},
    {0xDC05, "Gamecard not inserted"},
    {0x17C05, "Gamecard not initialized"},
    {0x1F405, "Sdcard not inserted"},
    {0x20805, "Storage not mounted"},
    {0x806, "Converted from error 0xD401"},
    {0x1006, "Converted from error 0xE401"},
    {0x408, "Program location entry not found"},
    {0x608, "Invalid context for control location"},
    {0x808, "Storage not found"},
    {0xA08, "Access denied"},
    {0xC08, "Offline manual HTML location entry not found"},
    {0xE08, "Title is not registered"},
    {0x1008, "Control location entry for host not found"},
    {0x1208, "Legal info HTML location entry not found"},
    {0x1408, "Program location for debug entry not found"},
    {0x209, "Args too long."},
    {0x409, "Maximum processes loaded."},
    {0x609, "NPDM too big."},
    {0x809, "Invalid NPDM."},
    {0xA09, "Invalid NSO."},
    {0xC09, "Invalid Path."},
    {0xE09, "Already registered."},
    {0x1009, "Title not found."},
    {0x1209, "Title - id in ACI0 doesn't match range in ACID."},
    {0x1409, "Invalid version in NPDM."},
    {0x6609, "Insufficient address space."},
    {0x6809, "Insufficient NRO."},
    {0x6A09, "Invalid NRR"},
    {0x6C09, "Invalid signature"},
    {0x6E09, "Insufficient NRO registrations."},
    {0x7009, "Insufficient NRR registrations."},
    {0x7209, "NRO Already loaded."},
    {0xA209, "Unaligned NRR address"},
    {0xA409, "Bad NRR size"},
    {0xA809, "NRR Not Loaded."},
    {0xAA09, "Bad NRR address"},
    {0xAE09, "Bad initialization"},
    {0xC809, "Unknown ACI0 descriptor"},
    {0xCE09, "ACID / ACI0 don't match for descriptor \"KernelFlags\""},
    {0xD009, "ACID / ACI0 don't match for descriptor \"SyscallMask\""},
    {0xD409, "ACID / ACI0 don't match for descriptor \"MapIoOrNormalRange\""},
    {0xD609, "ACID / ACI0 don't match for descriptor \"MapNormalPage\""},
    {0xDE09, "ACID / ACI0 don't match for descriptor \"InterruptPair\""},
    {0xE209, "ACID / ACI0 don't match for descriptor \"ApplicationType\""},
    {0xE409, "ACID / ACI0 don't match for descriptor \"KernelReleaseVersion\""},
    {0xE609, "ACID / ACI0 don't match for descriptor \"HandleTableSize\""},
    {0xE809, "ACID / ACI0 don't match for descriptor \"DebugFlags\""},
    {0x1940A, "Invalid CMIF header size."},
    {0x1A60A, "Invalid CMIF input header."},
    {0x1A80A, "Invalid CMIF output header."},
    {0x1BA0A, "Invalid method dispatch ID."},
    {0x1D60A, "Invalid in object count."},
    {0x1D80A, "Invalid out object count."},
    {0x25A0A, "Out of domain entries."},
    {0x20B, "Unsupported operation"},
    {0xCC0B, "Out of server session memory"},
    {0x11A0B, "Went past maximum during marshalling."},
    {0x1900B, "Session doesn't support domains."},
    {0x25A0B, "Remote process is dead."},
    {0x3260B, "Unknown request type"},
    {0x3D60B, "IPC Query 1 failed."},
    {0x20F, "Pid not found"},
    {0x60F, "Process has no pending events"},
    {0xA0F, "Application already running"},
    {0x410, "Title - id not found"},
    {0xF010, "Sysupdate not required"},
    {0x1F610, "Unexpected StorageId"},
    {0x2A810, "IsAnyInternetRequestAccepted with the output from GetClientId returned false."},
    {0x64210, "SystemDeliveryInfo system_delivery_protocol_version is less than the system - setting."},
    {0x64410, "SystemDeliveryInfo system_delivery_protocol_version is larger than the system - setting."},
    {0x74610, "Invalid SystemDeliveryInfo HMAC / invalid Meta Id."},
    {0x6F810, "Unknown state ref - count is zero."},
    {0x215, "Out of processes"},
    {0x415, "Not initialized."},
    {0x615, "Max sessions"},
    {0x815, "Service already registered"},
    {0xA15, "Out of services"},
    {0xC15, "Invalid name(all zeroes)"},
    {0xE15, "Service not registered"},
    {0x1015, "Permission denied"},
    {0x1215, "Service Access Control too big."},
    {0x416, "Address space is full"},
    {0x616, "NRO already loaded"},
    {0x816, "Invalid NRO header values"},
    {0xC16, "Bad NRR magic"},
    {0x1016, "Reached max NRR count"},
    {0x1216, "Unable to verify NRO hash or NRR signature"},
    {0x80216, "Address not page - aligned"},
    {0x80416, "Incorrect NRO size"},
    {0x80816, "NRO not loaded"},
    {0x80A16, "NRR not loaded"},
    {0x80C16, "Already initialized"},
    {0x80E16, "Not initialized"},
    {0x21A, "SMC is not implemented"},
    {0x41A, "SMC argument is invalid"},
    {0x61A, "SMC is currently in progress / secmon is busy"},
    {0x81A, "Secmon not currently performing async operation"},
    {0xA1A, "Invalid SMC async callback key"},
    {0xC1A, "SMC is blacklisted during current boot"},
    {0xC81A, "Invalid(buffer) size"},
    {0xCA1A, "Unknown SMC error"},
    {0xCA1A, "Decryption failure"},
    {0xD01A, "No AES keyslots available"},
    {0xD21A, "Invalid AES keyslot"},
    {0xD41A, "BootReason already set"},
    {0xD61A, "BootReason not set"},
    {0xD81A, "Invalid argument"},
    {0x35B, "Failed to init SM."},
    {0x55B, "Failed to init FS."},
    {0x75B, "Failed to open NRO file.May also happen when SD card isn't inserted / SD mounting failed earlier."},
    {0x95B, "Failed to read NRO header."},
    {0xB5B, "Invalid NRO magic."},
    {0xD5B, "Invalid NRO segments."},
    {0xF5B, "Failed to read NRO."},
    {0x135B, "Failed to allocate heap."},
    {0x255B, "Failed to map code - binary memory."},
    {0x275B, "Failed to map code memory(.text)."},
    {0x295B, "Failed to map code memory(.rodata)."},
    {0x2B5B, "Failed to map code memory(.data + .bss)."},
    {0x315B, "Failed to unmap code memory(.text)."},
    {0x335B, "Failed to unmap code memory(.rodata)."},
    {0x355B, "Failed to unmap code memory(.data + .bss)."},
    {0x19269, "Null settings name"},
    {0x19469, "Null settings key"},
    {0x19669, "Null settings value"},
    {0x19A69, "Null settings value buffer"},
    {0x1A069, "Null setting value size buffer"},
    {0x1A269, "Null debug mode flag buffer"},
    {0x1BA69, "Setting group name has zero length"},
    {0x1BC69, "Empty settings item key"},
    {0x1E269, "Setting group name is too long(64 character limit  ? )" },
    {0x1E469, "Setting name is too long(64 character limit  ? )" },
    {0x20A69, "Setting group name ends with '.' or contains invalid characters(allowed: [a - z0 - 9_\\ - .])"},
    {0x20C69, "Setting name ends with '.' or contains invalid characters(allowed: [a - z0 - 9_\\ - .] )"},
    {0x4DA69, "Null language code buffer"},
    {0x4EE69, "Null network settings buffer"},
    {0x4F069, "Null network settings output count buffer"},
    {0x50269, "Null backlight settings buffer"},
    {0x51669, "Null Bluetooth device setting buffer"},
    {0x51869, "Null Bluetooth device setting output count buffer"},
    {0x51A69, "Null Bluetooth enable flag buffer"},
    {0x51C69, "Null Bluetooth AFH enable flag buffer"},
    {0x51E69, "Null Bluetooth boost enable flag buffer"},
    {0x52069, "Null BLE pairing settings buffer"},
    {0x52269, "Null BLE pairing settings entry count buffer"},
    {0x52A69, "Null external steady clock source ID buffer"},
    {0x52C69, "Null user system clock context buffer"},
    {0x52E69, "Null network system clock context buffer"},
    {0x53069, "Null user system clock automatic correction enabled flag buffer"},
    {0x53269, "Null shutdown RTC value buffer"},
    {0x53469, "Null external steady clock internal offset buffer"},
    {0x53E69, "Null account settings buffer"},
    {0x55269, "Null audio volume buffer"},
    {0x55669, "Null ForceMuteOnHeadphoneRemoved buffer"},
    {0x55869, "Null headphone volume warning count buffer"},
    {0x55E69, "Invalid audio output mode"},
    {0x56069, "Null headphone volume update flag buffer"},
    {0x56669, "Null console information upload flag buffer"},
    {0x57A69, "Null automatic application download flag buffer"},
    {0x57C69, "Null notification settings buffer"},
    {0x57E69, "Null account notification settings entry count buffer"},
    {0x58069, "Null account notification settings buffer"},
    {0x58E69, "Null vibration master volume buffer"},
    {0x59069, "Null NX controller settings buffer"},
    {0x59269, "Null NX controller settings entry count buffer"},
    {0x59469, "Null USB full key enable flag buffer"},
    {0x5A269, "Null TV settings buffer"},
    {0x5A469, "Null EDID buffer"},
    {0x5B669, "Null data deletion settings buffer"},
    {0x5CA69, "Null initial system applet program ID buffer"},
    {0x5CC69, "Null overlay disp program ID buffer"},
    {0x5CE69, "Null IsInRepairProcess buffer"},
    {0x5D069, "Null RequiresRunRepairTimeReviser buffer"},
    {0x5DE69, "Null device timezone location name buffer"},
    {0x5F269, "Null primary album storage buffer"},
    {0x60669, "Null USB 3.0 enable flag buffer"},
    {0x60869, "Null USB Type - C power source circuit version buffer"},
    {0x61A69, "Null battery lot buffer"},
    {0x62E69, "Null serial number buffer"},
    {0x64269, "Null lock screen flag buffer"},
    {0x64669, "Null color set ID buffer"},
    {0x64869, "Null quest flag buffer"},
    {0x64A69, "Null wireless certification file size buffer"},
    {0x64C69, "Null wireless certification file buffer"},
    {0x64E69, "Null initial launch settings buffer"},
    {0x65069, "Null device nickname buffer"},
    {0x65269, "Null battery percentage flag buffer"},
    {0x65469, "Null applet launch flags buffer"},
    {0x7E869, "Null wireless LAN enable flag buffer"},
    {0x7FA69, "Null product model buffer"},
    {0x80E69, "Null NFC enable flag buffer"},
    {0x82269, "Null ECI device certificate buffer"},
    {0x82469, "Null E - Ticket device certificate buffer"},
    {0x83669, "Null sleep settings buffer"},
    {0x84A69, "Null EULA version buffer"},
    {0x84C69, "Null EULA version entry count buffer"},
    {0x85E69, "Null LDN channel buffer"},
    {0x87269, "Null SSL key buffer"},
    {0x87469, "Null SSL certificate buffer"},
    {0x88669, "Null telemetry flags buffer"},
    {0x89A69, "Null Gamecard key buffer"},
    {0x89C69, "Null Gamecard certificate buffer"},
    {0x8AE69, "Null PTM battery lot buffer"},
    {0x8B069, "Null PTM fuel gauge parameter buffer"},
    {0x8C269, "Null ECI device key buffer"},
    {0x8C469, "Null E - Ticket device key buffer"},
    {0x8D669, "Null speaker parameter buffer"},
    {0x8EA69, "Null firmware version buffer"},
    {0x8EC69, "Null firmware version digest buffer"},
    {0x8EE69, "Null rebootless system update version buffer"},
    {0x8FE69, "Null Mii author ID buffer"},
    {0x91269, "Null fatal flags buffer"},
    {0x92669, "Null auto update enable flag buffer"},
    {0x93A69, "Null external RTC reset flag buffer"},
    {0x94E69, "Null push notification activity mode buffer"},
    {0x96269, "Null service discovery control setting buffer"},
    {0x97669, "Null error report share permission buffer"},
    {0x98A69, "Null LCD vendor ID buffer"},
    {0x99E69, "Null console SixAxis sensor acceleration bias buffer"},
    {0x9A069, "Null console SixAxis sensor angular velocity bias buffer"},
    {0x9A269, "Null console SixAxis sensor acceleration gain buffer"},
    {0x9A469, "Null console SixAxis sensor angular velocity gain buffer"},
    {0x9A669, "Null console SixAxis sensor angular velocity time bias buffer"},
    {0x9A869, "Null console SixAxis sensor angular acceleration buffer"},
    {0x9B269, "Null keyboard layout buffer"},
    {0x9BA69, "Invalid keyboard layout"},
    {0x9C669, "Null web inspector flag buffer"},
    {0x9C869, "Null allowed SSL hosts buffer"},
    {0x9CA69, "Null allowed SSL hosts entry count buffer"},
    {0x9CC69, "Null host FS mount point buffer"},
    {0x9EE69, "Null Amiibo key buffer"},
    {0x9F069, "Null Amiibo ECQV certificate buffer"},
    {0x9F269, "Null Amiibo ECDSA certificate buffer"},
    {0x9F469, "Null Amiibo ECQV BLS key buffer"},
    {0x9F669, "Null Amiibo ECQV BLS certificate buffer"},
    {0x9F869, "Null Amiibo ECQV BLS root certificate buffer"},
    {0x272, "Generic error"},
    {0xC72, "Unsupported operation"},
    {0x74, "Time service not initialized"},
    {0x274, "Permission denied"},
    {0xCC74, "Time not set / Clock Source Id mismatch"},
    {0x19074, "Invalid time comparison"},
    {0x19274, "Signed overflow / underflow"},
    {0x64274, "Memory allocation failure"},
    {0x70A74, "Null pointer"},
    {0x70C74, "Value out of valid range"},
    {0x70E74, "TimeZoneRule conversion failed"},
    {0x7BA74, "TimeZone location name not found"},
    {0x7BC74, "Unimplemented functionality"},
    {0xC79, "IsAnyInternetRequestAccepted with the output from GetClientId returned false."},
    {0x27A, "Invalid argument"},
    {0x47A, "Object not found"},
    {0x67A, "Object locked / in used"},
    {0x87A, "Target already mounted"},
    {0xA7A, "Target not mounted"},
    {0xC7A, "Object already opened"},
    {0xE7A, "Object not opened"},
    {0x107A, "IsAnyInternetRequestAccepted with the output from GetClientId returned false."},
    {0xA07A, "Passphrase not found"},
    {0xA27A, "Data verification failed"},
    {0xB47A, "Invalid API call"},
    {0xC47A, "Invalid operation"},
    {0x167B, "Converted from NSS SEC errors : -8192 (SEC_ERROR_IO), -8191 (SEC_ERROR_LIBRARY_FAILURE), -8190 (SEC_ERROR_BAD_DATA), -8189 (SEC_ERROR_OUTPUT_LEN), -8188 (SEC_ERROR_INPUT_LEN), -8187 (SEC_ERROR_INVALID_ARGS), -8186 (SEC_ERROR_INVALID_ALGORITHM), -8184 (SEC_ERROR_INVALID_TIME), -8152 (SEC_ERROR_INVALID_KEY)."
             "Also converted from NSPR errors : -5991 (PR_IO_ERROR), -5962 (PR_BUFFER_OVERFLOW_ERROR), -5950 (PR_FILE_NOT_FOUND_ERROR), -5949 (PR_NOT_DIRECTORY_ERROR), -5946 (PR_FILESYSTEM_MOUNTED_ERROR), -5938 (PR_END_OF_FILE_ERROR)."
             "Also converted from NSS SSL errors : -12223 (SSL_ERROR_GENERATE_RANDOM_FAILURE), -12222 (SSL_ERROR_SIGN_HASHES_FAILURE), -12221 (SSL_ERROR_EXTRACT_PUBLIC_KEY_FAILURE), -12219 (SSL_ERROR_CLIENT_KEY_EXCHANGE_FAILURE), -12218 (SSL_ERROR_ENCRYPTION_FAILURE), -12217 (SSL_ERROR_DECRYPTION_FAILURE), -12216 (SSL_ERROR_SOCKET_WRITE_FAILURE), -12212 (SSL_ERROR_SYM_KEY_CONTEXT_FAILURE), -12209 (SSL_ERROR_IV_PARAM_FAILURE), -12207 (SSL_ERROR_SESSION_KEY_GEN_FAILURE), -12203 (SSL_ERROR_NO_COMPRESSION_OVERLAP), -12202 (SSL_ERROR_HANDSHAKE_NOT_COMPLETED), -12201 (SSL_ERROR_BAD_HANDSHAKE_HASH_VALUE), -12172 (SSL_ERROR_NEXT_PROTOCOL_DATA_INVALID)."},
    {0x1A7B, "Unrecognized error."},
    {0xCC7B, "Converted from NSS SEC error - 8173 (SEC_ERROR_NO_MEMORY)."
             "Also converted from NSPR errors : -6000 (PR_OUT_OF_MEMORY_ERROR), -5974 (PR_INSUFFICIENT_RESOURCES_ERROR, -5971 (PR_PROC_DESC_TABLE_FULL_ERROR)."},
    {0xE87B, "Converted from NSPR error - 5999 (PR_BAD_DESCRIPTOR_ERROR)."},
    {0x1027B, "DER CRL decoding failed."},
    {0x1987B, "Converted from NSPR error - 5998 (PR_WOULD_BLOCK_ERROR)."},
    {0x19A7B, "Converted from NSPR error - 5990 (PR_IO_TIMEOUT_ERROR)."},
    {0x19C7B, "Converted from NSPR error - 5935 (PR_OPERATION_ABORTED_ERROR)."},
    {0x1A07B, "Converted from NSPR error - 5978 (PR_NOT_CONNECTED_ERROR)."},
    {0x1A27B, "Converted from NSPR error - 5961 (PR_CONNECT_RESET_ERROR)."},
    {0x1A47B, "Converted from NSPR error - 5928 (PR_CONNECT_ABORTED_ERROR)."},
    {0x1A67B, "Converted from NSPR error - 5929 (PR_SOCKET_SHUTDOWN_ERROR)."},
    {0x1A87B, "Converted from NSPR error - 5930 (PR_NETWORK_DOWN_ERROR)."},
    {0x1AE7B, "ClientPki / InternalPki was already previously imported / registered."},
    {0x1B47B, "Maximum number of ServerPki objects were already imported."},
    {0x25A7B, "Converted from NSS SSL error - 12276 (SSL_ERROR_BAD_CERT_DOMAIN)."},
    {0x25C7B, "Converted from NSS SSL error - 12285 (SSL_ERROR_NO_CERTIFICATE)."},
    {0x25E7B, "Converted from NSS SEC errors : -8181 (SEC_ERROR_EXPIRED_CERTIFICATE), -8162 (SEC_ERROR_EXPIRED_ISSUER_CERTIFICATE)."},
    {0x2607B, "Converted from NSS SEC error - 8180 (SEC_ERROR_REVOKED_CERTIFICATE)."},
    {0x2627B, "Converted from NSS SEC error - 8183 (SEC_ERROR_BAD_DER)."},
    {0x2647B, "Converted from NSS SEC errors : -8102 (SEC_ERROR_INADEQUATE_KEY_USAGE), -8101 (SEC_ERROR_INADEQUATE_CERT_TYPE)."},
    {0x2667B, "Converted from NSS SEC errors : -8185 (SEC_ERROR_INVALID_AVA), -8182 (SEC_ERROR_BAD_SIGNATURE), -8158 (SEC_ERROR_EXTENSION_VALUE_INVALID), -8156 (SEC_ERROR_CA_CERT_INVALID), -8151 (SEC_ERROR_UNKNOWN_CRITICAL_EXTENSION), -8080 (SEC_ERROR_CERT_NOT_IN_NAME_SPACE)."},
    {0x2687B, "Converted from NSS SEC errors : -8179 (SEC_ERROR_UNKNOWN_ISSUER), -8172 (SEC_ERROR_UNTRUSTED_ISSUER), -8014 (SEC_ERROR_APPLICATION_CALLBACK_ERROR)."},
    {0x26A7B, "Converted from NSS SEC error - 8171 (SEC_ERROR_UNTRUSTED_CERT)."},
    {0x26C7B, "Converted from NSS SSL errors : -12233 (SSL_ERROR_RX_UNKNOWN_RECORD_TYPE), -12232 (SSL_ERROR_RX_UNKNOWN_HANDSHAKE), -12231 (SSL_ERROR_RX_UNKNOWN_ALERT).This is also returned by ImportClientPki when import fails."},
    {0x26E7B, "Converted from NSS SSL errors : -12261 (SSL_ERROR_RX_MALFORMED_HELLO_REQUEST), -12260 (SSL_ERROR_RX_MALFORMED_CLIENT_HELLO), -12259 (SSL_ERROR_RX_MALFORMED_SERVER_HELLO), -12258 (SSL_ERROR_RX_MALFORMED_CERTIFICATE), -12257 (SSL_ERROR_RX_MALFORMED_SERVER_KEY_EXCH), -12256 (SSL_ERROR_RX_MALFORMED_CERT_REQUEST), -12255 (SSL_ERROR_RX_MALFORMED_HELLO_DONE), -12254 (SSL_ERROR_RX_MALFORMED_CERT_VERIFY), -12253 (SSL_ERROR_RX_MALFORMED_CLIENT_KEY_EXCH), -12252 (SSL_ERROR_RX_MALFORMED_FINISHED), -12251 (SSL_ERROR_RX_MALFORMED_CHANGE_CIPHER), -12250 (SSL_ERROR_RX_MALFORMED_ALERT), -12249 (SSL_ERROR_RX_MALFORMED_HANDSHAKE), -12248 (SSL_ERROR_RX_MALFORMED_APPLICATION_DATA), -12166 (SSL_ERROR_RX_MALFORMED_HELLO_VERIFY_REQUEST)."},
    {0x2707B, "Converted from NSS SEC error - 8144 (SEC_ERROR_UNSUPPORTED_KEYALG)."
              "Also converted from NSS SSL errors : -12274 (SSL_ERROR_SSL2_DISABLED), -12247 (SSL_ERROR_RX_UNEXPECTED_HELLO_REQUEST), -12246 (SSL_ERROR_RX_UNEXPECTED_CLIENT_HELLO), -12245 (SSL_ERROR_RX_UNEXPECTED_SERVER_HELLO), -12244 (SSL_ERROR_RX_UNEXPECTED_CERTIFICATE), -12243 (SSL_ERROR_RX_UNEXPECTED_SERVER_KEY_EXCH), -12242 (SSL_ERROR_RX_UNEXPECTED_CERT_REQUEST), -12241 (SSL_ERROR_RX_UNEXPECTED_HELLO_DONE), -12240 (SSL_ERROR_RX_UNEXPECTED_CERT_VERIFY), -12239 (SSL_ERROR_RX_UNEXPECTED_CLIENT_KEY_EXCH), -12238 (SSL_ERROR_RX_UNEXPECTED_FINISHED)."},
    {0x2727B, "Converted from NSS SSL errors : -12237 (SSL_ERROR_RX_UNEXPECTED_CHANGE_CIPHER), -12236 (SSL_ERROR_RX_UNEXPECTED_ALERT), -12235 (SSL_ERROR_RX_UNEXPECTED_HANDSHAKE), -12234 (SSL_ERROR_RX_UNEXPECTED_APPLICATION_DATA)."},
    {0x2747B, "Converted from NSS SSL error - 12263 (SSL_ERROR_RX_RECORD_TOO_LONG)."},
    {0x2767B, "Converted from NSS SSL error - 12165 (SSL_ERROR_RX_UNEXPECTED_HELLO_VERIFY_REQUEST)."},
    {0x2787B, "Converted from NSS SSL error - 12163 (SSL_ERROR_RX_UNEXPECTED_CERT_STATUS)."},
    {0x27A7B, "Converted from NSS SSL error - 12160 (SSL_ERROR_INCORRECT_SIGNATURE_ALGORITHM)."},
    {0x27C7B, "Converted from NSS SSL errors : -12173 (SSL_ERROR_WEAK_SERVER_EPHEMERAL_DH_KEY), -12156 (SSL_ERROR_WEAK_SERVER_CERT_KEY)."},
    {0x27E7B, "Converted from NSS SSL error - 12273 (SSL_ERROR_BAD_MAC_READ)."},
    {0x2827B, "Converted from NSS SSL errors : -12215 (SSL_ERROR_MD5_DIGEST_FAILURE), -12214 (SSL_ERROR_SHA_DIGEST_FAILURE), -12161 (SSL_ERROR_DIGEST_FAILURE)."},
    {0x2847B, "Converted from NSS SSL error - 12213 (SSL_ERROR_MAC_COMPUTATION_FAILURE)."},
    {0x2887B, "Converted from NSS SEC error - 8157 (SEC_ERROR_EXTENSION_NOT_FOUND)."},
    {0x28A7B, "Converted from NSS SEC error - 8049 (SEC_ERROR_UNRECOGNIZED_OID)."},
    {0x28C7B, "Converted from NSS SEC error - 8032 (SEC_ERROR_POLICY_VALIDATION_FAILED)."},
    {0x2947B, "Converted from NSS SSL error - 12177 (SSL_ERROR_DECOMPRESSION_FAILURE)."},
    {0xBBA7B, "Converted from NSS SSL error - 12230 (SSL_ERROR_CLOSE_NOTIFY_ALERT)."},
    {0xBBC7B, "Converted from NSS SSL error - 12229 (SSL_ERROR_HANDSHAKE_UNEXPECTED_ALERT)."},
    {0xBBE7B, "Converted from NSS SSL error - 12272 (SSL_ERROR_BAD_MAC_ALERT)."},
    {0xBC07B, "Converted from NSS SSL error - 12197 (SSL_ERROR_DECRYPTION_FAILED_ALERT)."},
    {0xBC27B, "Converted from NSS SSL error - 12196 (SSL_ERROR_RECORD_OVERFLOW_ALERT)."},
    {0xBC47B, "Converted from NSS SSL error - 12228 (SSL_ERROR_DECOMPRESSION_FAILURE_ALERT)."},
    {0xBC67B, "Converted from NSS SSL error - 12227 (SSL_ERROR_HANDSHAKE_FAILURE_ALERT)."},
    {0xBCA7B, "Converted from NSS SSL error - 12271 (SSL_ERROR_BAD_CERT_ALERT)."},
    {0xBCC7B, "Converted from NSS SSL error - 12225 (SSL_ERROR_UNSUPPORTED_CERT_ALERT)."},
    {0xBCE7B, "Converted from NSS SSL error - 12270 (SSL_ERROR_REVOKED_CERT_ALERT)."},
    {0xBD07B, "Converted from NSS SSL error - 12269 (SSL_ERROR_EXPIRED_CERT_ALERT)."},
    {0xBD27B, "Converted from NSS SSL error - 12224 (SSL_ERROR_CERTIFICATE_UNKNOWN_ALERT)."},
    {0xBD47B, "Converted from NSS SSL error - 12226 (SSL_ERROR_ILLEGAL_PARAMETER_ALERT)."},
    {0xBD67B, "Converted from NSS SSL error - 12195 (SSL_ERROR_UNKNOWN_CA_ALERT)."},
    {0xBD87B, "Converted from NSS SSL error - 12194 (SSL_ERROR_ACCESS_DENIED_ALERT)."},
    {0xBDA7B, "Converted from NSS SSL error - 12193 (SSL_ERROR_DECODE_ERROR_ALERT)."},
    {0xBDC7B, "Converted from NSS SSL error - 12192 (SSL_ERROR_DECRYPT_ERROR_ALERT)."},
    {0xBDE7B, "Converted from NSS SSL error - 12191 (SSL_ERROR_EXPORT_RESTRICTION_ALERT)."},
    {0xBE07B, "Converted from NSS SSL error - 12190 (SSL_ERROR_PROTOCOL_VERSION_ALERT)."},
    {0xBE27B, "Converted from NSS SSL error - 12189 (SSL_ERROR_INSUFFICIENT_SECURITY_ALERT)."},
    {0xBE47B, "Converted from NSS SSL error - 12188 (SSL_ERROR_INTERNAL_ERROR_ALERT)."},
    {0xBE67B, "Converted from NSS SSL error - 12157 (SSL_ERROR_INAPPROPRIATE_FALLBACK_ALERT)."},
    {0xBE87B, "Converted from NSS SSL error - 12187 (SSL_ERROR_USER_CANCELED_ALERT)."},
    {0xBEA7B, "Converted from NSS SSL error - 12186 (SSL_ERROR_NO_RENEGOTIATION_ALERT)."},
    {0xBEC7B, "Converted from NSS SSL error - 12184 (SSL_ERROR_UNSUPPORTED_EXTENSION_ALERT)."},
    {0xBEE7B, "Converted from NSS SSL error - 12183 (SSL_ERROR_CERTIFICATE_UNOBTAINABLE_ALERT)."},
    {0xBF07B, "Converted from NSS SSL error - 12182 (SSL_ERROR_UNRECOGNIZED_NAME_ALERT)."},
    {0xBF27B, "Converted from NSS SSL error - 12181 (SSL_ERROR_BAD_CERT_STATUS_RESPONSE_ALERT)."},
    {0xBF47B, "Converted from NSS SSL error - 12180 (SSL_ERROR_BAD_CERT_HASH_VALUE_ALERT)."},
    {0x27127B, "Converted from NSS SSL error - 12155 (SSL_ERROR_RX_SHORT_DTLS_READ)."},
    {0x271E7B, "Out - of - bounds error during error conversion."},
    {0x287C, "Argument is NULL"},
    {0x2C7C, "Argument is invalid"},
    {0x3C7C, "Bad input buffer size"},
    {0x407C, "Invalid input buffer"},
    {0x767C, "IsAnyInternetRequestAccepted with the output from GetClientId returned false."},
    {0x27E, "Invalid argument"},
    {0x87E, "Entry not found"},
    {0xCE7E, "Invalid database signature value(should be \"NFDB\")"},
    {0xD27E, "Invalid database entry count"},
    {0x1987E, "Development / debug - only behavior"},
    {0x480, "IStorage not available."},
    {0x4680, "Error while launching applet."},
    {0x4A80, "Title - ID not found.Caused by code 0x410 when applet launch fails"},
    {0x3E880, "Invalid input"},
    {0x3EC80, "IStorage has already been opened by another accessor"},
    {0x3EE80, "IStorage Read / Write out - of - bounds"},
    {0x3FE80, "IStorage opened as wrong type(data opened as transfermem, transfermem opened as data)"},
    {0x40080, "Unbalanced fatal section leave(returned when executing LeaveFatalSection without a preceding EnterFatalSection call)"},
    {0x4B080, "Failed to allocate memory for IStorage"},
    {0x59080, "Thread stack pool exhausted(out of memory)"},
    {0x79C80, "DebugMode not enabled"},
    {0x7A880, "am.debug!dev_function setting needs to be set / DebugMode not enabled"},
    {0x7CC80, "Not implemented"},
    {0xCC81, "Transmission not agreed"},
    {0xD281, "Network unavailable"},
    {0x7DA81, "HTTP error : Couldnt resolve proxy"},
    {0x7DC81, "HTTP error : Couldnt resolve host"},
    {0x7DE81, "HTTP error : Couldnt connect"},
    {0x7FE81, "HTTP error : Write error"},
    {0x80481, "HTTP error : Read error"},
    {0x80681, "HTTP error : Out of memory"},
    {0x80881, "HTTP error : Operation timedout"},
    {0x81681, "HTTP error : SSL connect error"},
    {0x83681, "HTTP error : Peer failed verification"},
    {0x83881, "HTTP error : Got nothing"},
    {0x83E81, "HTTP error : Send error"},
    {0x84081, "HTTP error : Recv error"},
    {0x84481, "HTTP error : SSL cert problem"},
    {0x84681, "HTTP error : SSL cipher"},
    {0x84881, "HTTP error : SSL CA cert"},
    {0x12C081, "Server error : Status 400"},
    {0x12C281, "Server error : Status 401"},
    {0x12C681, "Server error : Status 403"},
    {0x138881, "Server error : Status 500"},
    {0x138E81, "Server error : Status 503"},
    {0x139081, "Server error : Status 504"},
    {0xA83, "Unrecognized applet ID"},
    {0x485, "Invalid DVFS table ID"},
    {0x685, "DVFS table ID for debug only, see DVFS Table notes."},
    {0x885, "Invalid parameter"},
    {0x1489, "Already initialized."},
    {0x3C89, "Task not found."},
    {0x5089, "Memory allocation failed / bad input."},
    {0x29489, "ContentMetaType doesn't match SystemUpdate."},
    {0x271289, "One of the following socket errors occurred : ENETDOWN, ECONNRESET, EHOSTDOWN, EHOSTUNREACH, or EPIPE.Also occurs when the received size doesn't match the expected size (recvfrom() ret with meta_size data receiving)."},
    {0x272489, "Socket was shutdown() due to the async operation being cancelled."},
    {0x273889, "Too many internal output entries with nim cmd42, system is Internet - connected, or an unrecognized socket error occured."},
    {0x27D889, "Connection timeout."},
    {0x2A4489, "Invalid ID."},
    {0x2A5889, "Invalid magicnum.Can also be caused by the connection being closed by the peer, since non - negative return values from recv() are ignored in this case."},
    {0x2A6C89, "Invalid data_size."},
    {0x2A8089, "The input ContentMetaKey doesn't match the ContentMetaKey in state."},
    {0x2A9489, "Invalid meta_size."},
    {0x36B289, "HTTP invalid response code(>= 600)."},
    {0x36B489, "HTTP invalid client response code(4xx)."},
    {0x36B689, "HTTP invalid server response code(5xx)."},
    {0x36B889, "HTTP invalid redirect response code(3xx)."},
    {0x3CF089, "Unknown / invalid libcurl error."},
    {0x68A, "Not initialized."},
    {0x668C, "USB data - transfer in progress"},
    {0xD48C, "Invalid descriptor"},
    {0x1928C, "USB device not bound / interface already enabled"},
    {0x1BE8E, "IsAnyInternetRequestAccepted with the output from GetClientId returned false."},
    {0x290, "Exited Abnormally(ExitReason == Abormal)"},
    {0x690, "Canceled(ExitReason == Canceled)"},
    {0x890, "Rejected"},
    {0xA90, "Exited Unexpectedly(ExitReason == Unexpected)"},
    {0x299, "Invalid audio device"},
    {0x499, "Operation couldn't complete successfully"},
    {0x699, "Invalid sample rate"},
    {0x899, "Buffer size too small"},
    {0x1099, "Too many buffers are still unreleased"},
    {0x1499, "Invalid channel count"},
    {0x40299, "Invalid / Unsupported operation"},
    {0xC0099, "Invalid handle"},
    {0xC0899, "Audio output was already started"},
    {0x3C9D, "Address is NULL"},
    {0x3E9D, "PID is NULL"},
    {0x549D, "Already bound"},
    {0xCC9D, "Invalid PID"},
    {0x49E, "BootImagePackage not found"},
    {0x69E, "Invalid BootImagePackage"},
    {0x89E, "Work buffer too small"},
    {0xA9E, "Work buffer not aligned"},
    {0xC9E, "BootImages need repair"},
    {0xAA3, "System is booting up repair process without VOL + held down."},
    {0xCA3, "System is booting up repair process that requires RepairTimeReviser but does not have special cartridge inserted."},
    {0x70A4, "IsAnyInternetRequestAccepted with the output from GetClientId returned false."},
    {0x4AF, "Bad version returned from calling the \"nnjitpluginGetVersion\" symbol."},
    {0xCAAF, "Input NRO / NRR are too large for the storage buffer."},
    {0x4B0AF, "Symbol funcptr used by this cmd is not initialized(Control / GenerateCode)."},
    {0x4B2AF, "DllPlugin Not initialized, or plugin NRO has already been loaded."},
    {0x4B4AF, "An error was returned from calling the symbol funcptr with the Control cmd."},
    {0xC8B2, "Invalid user ID"},
    {0xCAB2, "User does not exist"},
    {0x12CB2, "Service unavailable"},
    {0x190B2, "File storage failure"},
    {0xAB4, "Invalid event ID"},
    {0x1F4EB5, "Device authentication error : System update required"},
    {0x1F50B5, "Device authentication error : Banned"},
    {0x1F52B5, "Device authentication error : Internal server error"},
    {0x1F54B5, "Device authentication error : Under maintenance"},
    {0x58ACA, "Npad ID is out of range."},
    {0x2032CA, "ButtonConfigSettings IsFull flag is clear."},
    {0xF0CD, "IR image data not available / ready."},
    {0x1A8CD, "IR camera handle pointer is null."},
    {0x198CD, "IR camera invalid handle value."},
    {0x4CE, "Invalid argument."},
    {0x6CE, "Out of memory."},
    {0x10CE, "Out of range.Buffer needs to be aligned."},
    {0x18CE, "Invalid FileId."},
    {0x1ACE, "Invalid storage ID."},
    {0x1CCE, "Invalid content type."},
    {0x2ACE, "Failed to mount Image Directory."},
    {0x2CCE, "File too big."},
    {0x30CE, "Invalid file size."},
    {0x3CCE, "Buffer insufficient."},
    {0xAF2CE, "Too many files already saved."},
    {0x4DA, "StatusManager entry IsValid flag not set, or controller - update currently in - progress."},
    {0x6DA, "Controller - update failed via the LibraryApplet."},
    {0x8DA, "Invalid BusHandle."},
    {0xADA, "StatusManager entry flag + 0x0 not set, or device not connected."},
    {0xEDA, "PollingReceivedData not available."},
    {0x10DA, "StatusManager entry DeviceEnabled flag not set, or flag + 0x0 not set."},
    {0x12DA, "ExternalDeviceId mismatch."},
    {0x14DA, "BusHandle already initialized."},
    {0xD401, "nn::svc::ResultInvalidCurrentMemory: Error: Passed buffer is not usable for fs library. See a manual of fs library for more information."},
    {0x7802, "nn::fs::ResultMountNameAlreadyExists: Error: Specified mount name already exists."},
    {0x7D202, "nn::fs::ResultPartitionNotFound: Error: Specified partition is not found."},
    {0x7D402, "nn::fs::ResultTargetNotFound: Error: Specified target is not found."},
    {0x177202, "nn::fs::ResultNotImplemented: Error: Specified operation is not implemented."},
    {0x177A02, "nn::fs::ResultOutOfRange: Error: Specified value is out of range."},
    {0x2EE602, "nn::fs::ResultTooLongPath: Error: Too long path was specified."},
    {0x2EE802, "nn::fs::ResultInvalidCharacter: Error: Invalid path character was specified."},
    {0x2EEA02, "nn::fs::ResultInvalidPathFormat: Error: Invalid path format was specified."},
    {0x2F5A02, "nn::fs::ResultInvalidOffset: Error: Invalid offset was specified."},
    {0x2F5C02, "nn::fs::ResultInvalidSize: Error: Invalid size was specified."},
    {0x2F5E02, "nn::fs::ResultNullptrArgument: Error: Null pointer argument was specified."},
    {0x2F6202, "nn::fs::ResultInvalidMountName: Error: Invalid mount name was specified."},
    {0x2F6402, "nn::fs::ResultExtensionSizeTooLarge: Error: Extension size exceeds max value set in nmeta file."},
    {0x2F6602, "nn::fs::ResultExtensionSizeInvalid: Error: Extension size is not a multiple of nn::fs::SaveDataExtensionUnitSize."},
    {0x307202, "nn::fs::ResultFileExtensionWithoutOpenModeAllowAppend: Error: OpenMode_AllowAppend is required for implicit extension of file size by WriteFile()."},
    {0x327202, "nn::fs::ResultWriteModeFileNotClosed: Error: Close files opened in write mode before committing."},
    {0x328202, "nn::fs::ResultUserNotExist: Error: Specified user doesn't exist."},
    {0x346402, "nn::fs::ResultMappingTableFull: Error: Enough journal space is not left."},
    {0x346A02, "nn::fs::ResultOpenCountLimit: Error: The open count of files and directories reached the limitation."},
    {0x353602, "nn::fs::ResultMapFull: Error: Save data extension count reached the limitation."},
    {0x35F202, "nn::fs::ResultNotMounted: Error: Specified mount name is not found. "}
};
#endif // #ifdef ENABLE_ERROR_CODE_PRINTS

void error_code_print(Result rc, const char* file, int line)
{
    cout << file << ":" << line << " ";
    printf("Error: 0x%X Module ID: %d, Module Description: %d\n", R_VALUE(rc), R_MODULE(rc), R_DESCRIPTION(rc));

#if ENABLE_ERROR_CODE_PRINTS
    int module_value = R_VALUE(rc);

    map<int, string>::iterator it = s_error_code_strings.find(module_value);
    if (it == s_error_code_strings.end())
    {
        printf("Module %d not found. Check https://switchbrew.org/wiki/Error_codes\n", module_value);
        printf("Module ID: %d, Module Description: %d\n", R_MODULE(rc), R_DESCRIPTION(rc));
    }
    else
    {
        printf("Message: %s\n", it->second.c_str());
    }
#endif
}
